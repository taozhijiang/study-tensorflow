// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model_management.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto
#define PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow_serving/config/model_server_config.pb.h"
#include "tensorflow_serving/util/status.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto 

namespace protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto
namespace tensorflow {
namespace serving {
class ReloadConfigRequest;
class ReloadConfigRequestDefaultTypeInternal;
extern ReloadConfigRequestDefaultTypeInternal _ReloadConfigRequest_default_instance_;
class ReloadConfigResponse;
class ReloadConfigResponseDefaultTypeInternal;
extern ReloadConfigResponseDefaultTypeInternal _ReloadConfigResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::serving::ReloadConfigRequest* Arena::CreateMaybeMessage<::tensorflow::serving::ReloadConfigRequest>(Arena*);
template<> ::tensorflow::serving::ReloadConfigResponse* Arena::CreateMaybeMessage<::tensorflow::serving::ReloadConfigResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace serving {

// ===================================================================

class ReloadConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ReloadConfigRequest) */ {
 public:
  ReloadConfigRequest();
  virtual ~ReloadConfigRequest();

  ReloadConfigRequest(const ReloadConfigRequest& from);

  inline ReloadConfigRequest& operator=(const ReloadConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReloadConfigRequest(ReloadConfigRequest&& from) noexcept
    : ReloadConfigRequest() {
    *this = ::std::move(from);
  }

  inline ReloadConfigRequest& operator=(ReloadConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReloadConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ReloadConfigRequest*>(
               &_ReloadConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ReloadConfigRequest* other);
  void Swap(ReloadConfigRequest* other);
  friend void swap(ReloadConfigRequest& a, ReloadConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReloadConfigRequest* New() const final {
    return CreateMaybeMessage<ReloadConfigRequest>(NULL);
  }

  ReloadConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReloadConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReloadConfigRequest& from);
  void MergeFrom(const ReloadConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReloadConfigRequest* other);
  protected:
  explicit ReloadConfigRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.serving.ModelServerConfig config = 1;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  private:
  const ::tensorflow::serving::ModelServerConfig& _internal_config() const;
  public:
  const ::tensorflow::serving::ModelServerConfig& config() const;
  ::tensorflow::serving::ModelServerConfig* release_config();
  ::tensorflow::serving::ModelServerConfig* mutable_config();
  void set_allocated_config(::tensorflow::serving::ModelServerConfig* config);
  void unsafe_arena_set_allocated_config(
      ::tensorflow::serving::ModelServerConfig* config);
  ::tensorflow::serving::ModelServerConfig* unsafe_arena_release_config();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ReloadConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tensorflow::serving::ModelServerConfig* config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReloadConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ReloadConfigResponse) */ {
 public:
  ReloadConfigResponse();
  virtual ~ReloadConfigResponse();

  ReloadConfigResponse(const ReloadConfigResponse& from);

  inline ReloadConfigResponse& operator=(const ReloadConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReloadConfigResponse(ReloadConfigResponse&& from) noexcept
    : ReloadConfigResponse() {
    *this = ::std::move(from);
  }

  inline ReloadConfigResponse& operator=(ReloadConfigResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReloadConfigResponse* internal_default_instance() {
    return reinterpret_cast<const ReloadConfigResponse*>(
               &_ReloadConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ReloadConfigResponse* other);
  void Swap(ReloadConfigResponse* other);
  friend void swap(ReloadConfigResponse& a, ReloadConfigResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReloadConfigResponse* New() const final {
    return CreateMaybeMessage<ReloadConfigResponse>(NULL);
  }

  ReloadConfigResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReloadConfigResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReloadConfigResponse& from);
  void MergeFrom(const ReloadConfigResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReloadConfigResponse* other);
  protected:
  explicit ReloadConfigResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.serving.StatusProto status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  const ::tensorflow::serving::StatusProto& _internal_status() const;
  public:
  const ::tensorflow::serving::StatusProto& status() const;
  ::tensorflow::serving::StatusProto* release_status();
  ::tensorflow::serving::StatusProto* mutable_status();
  void set_allocated_status(::tensorflow::serving::StatusProto* status);
  void unsafe_arena_set_allocated_status(
      ::tensorflow::serving::StatusProto* status);
  ::tensorflow::serving::StatusProto* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ReloadConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tensorflow::serving::StatusProto* status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReloadConfigRequest

// .tensorflow.serving.ModelServerConfig config = 1;
inline bool ReloadConfigRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline const ::tensorflow::serving::ModelServerConfig& ReloadConfigRequest::_internal_config() const {
  return *config_;
}
inline const ::tensorflow::serving::ModelServerConfig& ReloadConfigRequest::config() const {
  const ::tensorflow::serving::ModelServerConfig* p = config_;
  // @@protoc_insertion_point(field_get:tensorflow.serving.ReloadConfigRequest.config)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::serving::ModelServerConfig*>(
      &::tensorflow::serving::_ModelServerConfig_default_instance_);
}
inline ::tensorflow::serving::ModelServerConfig* ReloadConfigRequest::release_config() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ReloadConfigRequest.config)
  
  ::tensorflow::serving::ModelServerConfig* temp = config_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  config_ = NULL;
  return temp;
}
inline ::tensorflow::serving::ModelServerConfig* ReloadConfigRequest::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ReloadConfigRequest.config)
  
  ::tensorflow::serving::ModelServerConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::tensorflow::serving::ModelServerConfig* ReloadConfigRequest::mutable_config() {
  
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::ModelServerConfig>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ReloadConfigRequest.config)
  return config_;
}
inline void ReloadConfigRequest::set_allocated_config(::tensorflow::serving::ModelServerConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ReloadConfigRequest.config)
}

// -------------------------------------------------------------------

// ReloadConfigResponse

// .tensorflow.serving.StatusProto status = 1;
inline bool ReloadConfigResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::tensorflow::serving::StatusProto& ReloadConfigResponse::_internal_status() const {
  return *status_;
}
inline const ::tensorflow::serving::StatusProto& ReloadConfigResponse::status() const {
  const ::tensorflow::serving::StatusProto* p = status_;
  // @@protoc_insertion_point(field_get:tensorflow.serving.ReloadConfigResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::tensorflow::serving::StatusProto*>(
      &::tensorflow::serving::_StatusProto_default_instance_);
}
inline ::tensorflow::serving::StatusProto* ReloadConfigResponse::release_status() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ReloadConfigResponse.status)
  
  ::tensorflow::serving::StatusProto* temp = status_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  status_ = NULL;
  return temp;
}
inline ::tensorflow::serving::StatusProto* ReloadConfigResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ReloadConfigResponse.status)
  
  ::tensorflow::serving::StatusProto* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::tensorflow::serving::StatusProto* ReloadConfigResponse::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::StatusProto>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ReloadConfigResponse.status)
  return status_;
}
inline void ReloadConfigResponse::set_allocated_status(::tensorflow::serving::StatusProto* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ReloadConfigResponse.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto
