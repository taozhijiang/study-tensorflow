// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model_management.proto

#include "tensorflow_serving/apis/model_management.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ModelServerConfig;
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto
namespace protobuf_tensorflow_5fserving_2futil_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_5fserving_2futil_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StatusProto;
}  // namespace protobuf_tensorflow_5fserving_2futil_2fstatus_2eproto
namespace tensorflow {
namespace serving {
class ReloadConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReloadConfigRequest>
      _instance;
} _ReloadConfigRequest_default_instance_;
class ReloadConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReloadConfigResponse>
      _instance;
} _ReloadConfigResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto {
static void InitDefaultsReloadConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ReloadConfigRequest_default_instance_;
    new (ptr) ::tensorflow::serving::ReloadConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ReloadConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReloadConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReloadConfigRequest}, {
      &protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::scc_info_ModelServerConfig.base,}};

static void InitDefaultsReloadConfigResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ReloadConfigResponse_default_instance_;
    new (ptr) ::tensorflow::serving::ReloadConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ReloadConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReloadConfigResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReloadConfigResponse}, {
      &protobuf_tensorflow_5fserving_2futil_2fstatus_2eproto::scc_info_StatusProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReloadConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReloadConfigResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ReloadConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ReloadConfigRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ReloadConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::serving::ReloadConfigResponse, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::ReloadConfigRequest)},
  { 6, -1, sizeof(::tensorflow::serving::ReloadConfigResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ReloadConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::serving::_ReloadConfigResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow_serving/apis/model_management.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.tensorflow_serving/apis/model_manageme"
      "nt.proto\022\022tensorflow.serving\0323tensorflow"
      "_serving/config/model_server_config.prot"
      "o\032$tensorflow_serving/util/status.proto\""
      "L\n\023ReloadConfigRequest\0225\n\006config\030\001 \001(\0132%"
      ".tensorflow.serving.ModelServerConfig\"G\n"
      "\024ReloadConfigResponse\022/\n\006status\030\001 \001(\0132\037."
      "tensorflow.serving.StatusProtoB\003\370\001\001b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/apis/model_management.proto", &protobuf_RegisterTypes);
  ::protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::AddDescriptors();
  ::protobuf_tensorflow_5fserving_2futil_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto
namespace tensorflow {
namespace serving {

// ===================================================================

void ReloadConfigRequest::InitAsDefaultInstance() {
  ::tensorflow::serving::_ReloadConfigRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::tensorflow::serving::ModelServerConfig*>(
      ::tensorflow::serving::ModelServerConfig::internal_default_instance());
}
void ReloadConfigRequest::unsafe_arena_set_allocated_config(
    ::tensorflow::serving::ModelServerConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ReloadConfigRequest.config)
}
void ReloadConfigRequest::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReloadConfigRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReloadConfigRequest::ReloadConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ReloadConfigRequest)
}
ReloadConfigRequest::ReloadConfigRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ReloadConfigRequest)
}
ReloadConfigRequest::ReloadConfigRequest(const ReloadConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::tensorflow::serving::ModelServerConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ReloadConfigRequest)
}

void ReloadConfigRequest::SharedCtor() {
  config_ = NULL;
}

ReloadConfigRequest::~ReloadConfigRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ReloadConfigRequest)
  SharedDtor();
}

void ReloadConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete config_;
}

void ReloadConfigRequest::ArenaDtor(void* object) {
  ReloadConfigRequest* _this = reinterpret_cast< ReloadConfigRequest* >(object);
  (void)_this;
}
void ReloadConfigRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReloadConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReloadConfigRequest::descriptor() {
  ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReloadConfigRequest& ReloadConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigRequest.base);
  return *internal_default_instance();
}


void ReloadConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ReloadConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool ReloadConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ReloadConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelServerConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ReloadConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ReloadConfigRequest)
  return false;
#undef DO_
}

void ReloadConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ReloadConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelServerConfig config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ReloadConfigRequest)
}

::google::protobuf::uint8* ReloadConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ReloadConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelServerConfig config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ReloadConfigRequest)
  return target;
}

size_t ReloadConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ReloadConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.serving.ModelServerConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReloadConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ReloadConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReloadConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ReloadConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ReloadConfigRequest)
    MergeFrom(*source);
  }
}

void ReloadConfigRequest::MergeFrom(const ReloadConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ReloadConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::tensorflow::serving::ModelServerConfig::MergeFrom(from.config());
  }
}

void ReloadConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ReloadConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigRequest::CopyFrom(const ReloadConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ReloadConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigRequest::IsInitialized() const {
  return true;
}

void ReloadConfigRequest::Swap(ReloadConfigRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReloadConfigRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReloadConfigRequest::UnsafeArenaSwap(ReloadConfigRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReloadConfigRequest::InternalSwap(ReloadConfigRequest* other) {
  using std::swap;
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReloadConfigRequest::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReloadConfigResponse::InitAsDefaultInstance() {
  ::tensorflow::serving::_ReloadConfigResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::tensorflow::serving::StatusProto*>(
      ::tensorflow::serving::StatusProto::internal_default_instance());
}
void ReloadConfigResponse::unsafe_arena_set_allocated_status(
    ::tensorflow::serving::StatusProto* status) {
  if (GetArenaNoVirtual() == NULL) {
    delete status_;
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ReloadConfigResponse.status)
}
void ReloadConfigResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReloadConfigResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReloadConfigResponse::ReloadConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.ReloadConfigResponse)
}
ReloadConfigResponse::ReloadConfigResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ReloadConfigResponse)
}
ReloadConfigResponse::ReloadConfigResponse(const ReloadConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::tensorflow::serving::StatusProto(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ReloadConfigResponse)
}

void ReloadConfigResponse::SharedCtor() {
  status_ = NULL;
}

ReloadConfigResponse::~ReloadConfigResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ReloadConfigResponse)
  SharedDtor();
}

void ReloadConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete status_;
}

void ReloadConfigResponse::ArenaDtor(void* object) {
  ReloadConfigResponse* _this = reinterpret_cast< ReloadConfigResponse* >(object);
  (void)_this;
}
void ReloadConfigResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReloadConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReloadConfigResponse::descriptor() {
  ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReloadConfigResponse& ReloadConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::scc_info_ReloadConfigResponse.base);
  return *internal_default_instance();
}


void ReloadConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ReloadConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ReloadConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.ReloadConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.StatusProto status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.ReloadConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.ReloadConfigResponse)
  return false;
#undef DO_
}

void ReloadConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.ReloadConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.StatusProto status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.serving.ReloadConfigResponse)
}

::google::protobuf::uint8* ReloadConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ReloadConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.StatusProto status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ReloadConfigResponse)
  return target;
}

size_t ReloadConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ReloadConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.serving.StatusProto status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReloadConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ReloadConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReloadConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ReloadConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ReloadConfigResponse)
    MergeFrom(*source);
  }
}

void ReloadConfigResponse::MergeFrom(const ReloadConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ReloadConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::tensorflow::serving::StatusProto::MergeFrom(from.status());
  }
}

void ReloadConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ReloadConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigResponse::CopyFrom(const ReloadConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ReloadConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigResponse::IsInitialized() const {
  return true;
}

void ReloadConfigResponse::Swap(ReloadConfigResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReloadConfigResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReloadConfigResponse::UnsafeArenaSwap(ReloadConfigResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReloadConfigResponse::InternalSwap(ReloadConfigResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReloadConfigResponse::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ReloadConfigRequest* Arena::CreateMaybeMessage< ::tensorflow::serving::ReloadConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ReloadConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::serving::ReloadConfigResponse* Arena::CreateMaybeMessage< ::tensorflow::serving::ReloadConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ReloadConfigResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
